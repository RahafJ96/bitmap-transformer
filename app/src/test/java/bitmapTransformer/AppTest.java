/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bitmapTransformer;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
//import static org.junit.Assert.*;
import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;


public class AppTest {

    @Test
    public void testGreenBlack() throws IOException {
        BufferedImage dummyImage = Bitmap.dummyBitMap();

        String outputFilePath = "C:\\Users\\STUDENT\\401Java\\bitmap-transformer\\app\\src\\test\\resources\\testGreenBlack.bmp";
        Bitmap.setImageData(dummyImage, outputFilePath);

        Bitmap.reverseBlackAndGreen();
        Bitmap.save();

        Path newBitMapInPath = Paths.get(outputFilePath);

        BufferedImage newImageData = ImageIO.read(newBitMapInPath.toFile());

        Color black = new Color(0, 0, 0);
//        Color white = new Color(255, 255, 255);
        Color green = new Color(46, 255, 0);

        assertEquals(green.getRGB(), newImageData.getRGB(0, 0),"This test should return a green color");
        assertEquals(black.getRGB(), newImageData.getRGB(0, 3),"This test should return a black color");

    }



    @Test
    public void testStretchVertically() throws IOException {
        BufferedImage dummyImage = Bitmap.dummyBitMap();

        String outputFilePath = "C:\\Users\\STUDENT\\401Java\\bitmap-transformer\\app\\src\\test\\resources\\testStretchVertically.bmp";
        Bitmap.setImageData(dummyImage, outputFilePath);

        Bitmap.stretchVertically();
        Bitmap.save();

        Path newBitMapInPath = Paths.get(outputFilePath);

        BufferedImage newImageData = ImageIO.read(newBitMapInPath.toFile());

        assertEquals(8, newImageData.getHeight(),"This test should return a height of 8");

    }

    @Test
    public void testStretchHorizontally() throws IOException {
        BufferedImage dummyImage = Bitmap.dummyBitMap();

        String outputFilePath = "C:\\Users\\STUDENT\\401Java\\bitmap-transformer\\app\\src\\test\\resources\\testStretchHorizontally.bmp";
        Bitmap.setImageData(dummyImage, outputFilePath);

        Bitmap.stretchHorizontally();
        Bitmap.save();

        Path newBitMapInPath = Paths.get(outputFilePath);

        BufferedImage newImageData = ImageIO.read(newBitMapInPath.toFile());

        assertEquals(8, newImageData.getWidth(),"This test should return a width of 8");

    }
}